{
  extends: ['config:base'],
  timezone: 'Europe/Zurich',
  schedule: 'after 5pm on the first day of the month',
  labels: ['dependencies'],
  separateMajorMinor: true,
  prHourlyLimit: 0,
  prConcurrentLimit: 0,
  lockFileMaintenance: {
    enabled: true,
    automerge: true,
    schedule: 'after 5pm on the first day of the month',
  },
  'pre-commit': { enabled: true },
  vulnerabilityAlerts: {
    schedule: ['at any time'],
    automerge: true,
  },
  regexManagers: [
    /** Do updates on pre-commit additional dependencies */
    {
      fileMatch: ['^\\.pre\\-commit\\-config\\.yaml$'],
      matchStrings: [" +- '?(?<depName>[^' @=]+)(@|==)(?<currentValue>[^' @=]+)'? # (?<datasource>.+)"],
    },
    {
      fileMatch: ['.*/.env$'],
      matchStrings: ['_TAG=(?<currentValue>[^\\s]+) +# (?<depName>[^\\s]+)'],
      datasourceTemplate: 'docker',
    },
    /** Do update on the schema present in the ci/config.yaml */
    {
      fileMatch: ['^ci/config\\.yaml$'],
      matchStrings: [
        '.*https://raw\\.githubusercontent\\.com/(?<depName>[^\\s]+)/(?<currentValue>[0-9\\.]+)/.*',
      ],
      datasourceTemplate: 'github-tags',
    },
    /** Python version in actions/setup-python action */
    {
      fileMatch: ['^\\.github/workflows/.*\\.yaml$'],
      matchStrings: [' python-version: [\'"](?<currentValue>[0-9\\.]+)[\'"]'],
      datasourceTemplate: 'python-version',
      depNameTemplate: 'python',
    },
  ],
  packageRules: [
    /** Automerge the patch, the minor and the dev dependency */
    {
      matchUpdateTypes: ['minor', 'patch'],
      automerge: true,
    },
    /** Auto merge the dev dependency update */
    {
      matchDepTypes: ['devDependencies'],
      automerge: true,
    },
    /** Group the patch and the minor */
    {
      matchUpdateTypes: ['minor', 'patch'],
      groupName: 'all patch versions',
    },
    {
      matchUpdateTypes: ['minor'],
      minimumReleaseAge: '14 days',
    },
    {
      matchUpdateTypes: ['major'],
      minimumReleaseAge: '3 months',
    },
    {
      groupName: 'paperless',
      schedule: 'at any time',
      matchDepNames: ['ghcr.io/paperless-ngx/paperless-ngx'],
    },
    {
      matchUpdateTypes: ['patch'],
      groupName: 'patch paperless',
      matchDepNames: ['ghcr.io/paperless-ngx/paperless-ngx'],
    },
    /** Support the 4 parts of shellcheck-py version with a v prefix */
    {
      versioning: 'regex:^v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)\\.(?<build>\\d+)$',
      matchDepNames: ['shellcheck-py/shellcheck-py'],
    },
    /** Group and auto merge the patch updates */
    {
      matchUpdateTypes: ['patch'],
      groupName: 'all patch versions',
      automerge: true,
    },
    /** Group and auto merge the minor updates */
    {
      matchUpdateTypes: ['minor'],
      groupName: 'all minor versions',
      automerge: true,
    },
    /** Group and auto merge the CI dependencies */
    {
      matchFileNames: ['.github/**', '.pre-commit-config.yaml', 'ci/**'],
      groupName: 'CI dependencies',
      automerge: true,
    },
    /** Ungroup Python dependencies */
    {
      matchDepNames: ['python'],
      groupName: 'Python',
    },
  ],
  separateMinorPatch: true,
}
